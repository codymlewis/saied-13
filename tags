!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/75ba24d4/
"Attacks.r"	src/TrustModel/ConsoleInterface.r	/^source("Attacks.r")$/;"	s
"Attacks.r"	src/TrustModel/TrustModel.r	/^source("Attacks.r")$/;"	s
"Attacks.r"	src/TrustModel/WebServer.r	/^source("Attacks.r")$/;"	s
"ReputationQR.r"	src/CapabilityEffects/ConsoleInterface.r	/^source("ReputationQR.r")$/;"	s
"ReputationQR.r"	src/CapabilityEffects/WebServer.r	/^source("ReputationQR.r")$/;"	s
"TrustManager.r"	src/TrustModel/TrustModel.r	/^source("TrustManager.r")$/;"	s
"TrustManager.r"	src/TrustModel/WebServer.r	/^source("TrustManager.r")$/;"	s
"TrustModel.r"	src/TrustModel/ConsoleInterface.r	/^source("TrustModel.r")$/;"	s
"TrustModel.r"	src/TrustModel/WebServer.r	/^source("TrustModel.r")$/;"	s
'optigrab'	src/TrustModel/ConsoleInterface.r	/^library('optigrab')$/;"	l
ATTACKS	src/TrustModel/Attacks.r	/^ATTACKS <- c(BAD_MOUTH_FLAG)$/;"	g
CAPABILITY_INDEX	src/TrustModel/TrustManager.r	/^CAPABILITY_INDEX <- 2$/;"	g
Configuration	README.md	/^## Configuration$/;"	s
Differing Reputations	report/AttackResultStart.tex	/^    \\section{Differing Reputations}$/;"	s
NODE_MON_ID	src/TrustModel/TrustManager.r	/^NODE_MON_ID <- 200 # ID of the node to monitor$/;"	g
NOTE_INDEX	src/TrustModel/TrustManager.r	/^NOTE_INDEX <- 3$/;"	g
ON_OFF_TOGGLE	src/TrustModel/Attacks.r	/^ON_OFF_TOGGLE <- 30$/;"	g
Parameters of all the simulations	report/AttackResultStart.tex	/^  \\section{Parameters of all the simulations}$/;"	s
REPUTATION_THRESHOLD	src/TrustModel/TrustModel.r	/^REPUTATION_THRESHOLD <- -1  # Point where a node is so ill reputed that it is$/;"	g
RESTRICTED_REPORT	src/TrustModel/TrustModel.r	/^RESTRICTED_REPORT <- -1 # Marker showing that the report is restricted$/;"	g
Reputation Attacks	report/AttackResultsEnd.tex	/^    \\section{Reputation Attacks}$/;"	s
Requirements	README.md	/^## Requirements$/;"	s
Running	README.md	/^## Running$/;"	s
SERVICES	src/TrustModel/TrustManager.r	/^SERVICES <- c(16, 33, 50, 66, 83, 100)$/;"	g
SERVICE_INDEX	src/TrustModel/TrustManager.r	/^SERVICE_INDEX <- 1$/;"	g
SessionLoad	report/Session.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	src/CapabilityEffects/Session.vim	/^let SessionLoad = 1$/;"	v
SessionLoad	src/TrustModel/Session.vim	/^let SessionLoad = 1$/;"	v
TIME_INDEX	src/TrustModel/TrustManager.r	/^TIME_INDEX <- 4$/;"	g
TRUST_INDEX	src/TrustModel/TrustManager.r	/^TRUST_INDEX <- 5 # Index of trust values for the nodemon matrix$/;"	g
Trust Model Simulator	README.md	/^# Trust Model Simulator$/;"	c
assign_attack_types	src/TrustModel/Attacks.r	/^assign_attack_types <- function(attack_types, malicious_percent, total_nodes, attack_type) {$/;"	f
bad_mouth	src/TrustModel/Attacks.r	/^bad_mouth <- function() {$/;"	f
calculate_reputation	src/CapabilityEffects/ReputationQR.r	/^calculate_reputation <- function(theta, client_notes, client_qrs,$/;"	f
calculate_reputation	src/TrustModel/TrustModel.r	/^calculate_reputation <- function(network, server, theta) {$/;"	f
capability_set	src/TrustModel/Attacks.r	/^capability_set <- function() {$/;"	f
compute_trust	src/TrustModel/TrustModel.r	/^compute_trust <- function(network, R, w) {$/;"	f
create_network	src/TrustModel/TrustManager.r	/^create_network <- function(total_nodes, malicious_percent, time,$/;"	f
create_nodemon_matrix	src/TrustModel/TrustManager.r	/^create_nodemon_matrix <- function(transactions) {$/;"	f
create_report_set	src/TrustModel/TrustManager.r	/^create_report_set <- function(total_nodes) {$/;"	f
entity_selection	src/TrustModel/TrustModel.r	/^entity_selection <- function(network, lambda, theta, eta,$/;"	f
find_c_i	src/CapabilityEffects/ReputationQR.r	/^find_c_i <- function(theta, t_1, t_i) {$/;"	f
find_c_i	src/TrustModel/TrustModel.r	/^find_c_i <- function(theta, t_1, t_i) {$/;"	f
find_dist	src/CapabilityEffects/ReputationQR.r	/^find_dist <- function(target, current) {$/;"	f
find_dist	src/TrustModel/TrustModel.r	/^find_dist <- function(target, current) {$/;"	f
find_qr	src/CapabilityEffects/ReputationQR.r	/^find_qr <- function(weight, client_note, theta, time, node_note,$/;"	f
find_s	src/CapabilityEffects/ReputationQR.r	/^find_s <- function(note_j) {$/;"	f
find_s	src/TrustModel/TrustModel.r	/^find_s <- function(note_j) {$/;"	f
find_weight	src/CapabilityEffects/ReputationQR.r	/^find_weight <- function(lambda, theta, note, report_time, distance, time) {$/;"	f
g:this_obsession	report/Session.vim	/^let g:this_obsession = v:this_session$/;"	v
g:this_obsession	src/CapabilityEffects/Session.vim	/^let g:this_obsession = v:this_session$/;"	v
g:this_obsession	src/TrustModel/Session.vim	/^let g:this_obsession = v:this_session$/;"	v
g:this_obsession_status	report/Session.vim	/^let g:this_obsession_status = 2$/;"	v
g:this_obsession_status	src/CapabilityEffects/Session.vim	/^let g:this_obsession_status = 2$/;"	v
g:this_obsession_status	src/TrustModel/Session.vim	/^let g:this_obsession_status = 2$/;"	v
g:this_session	report/Session.vim	/^let g:this_session = v:this_session$/;"	v
g:this_session	src/CapabilityEffects/Session.vim	/^let g:this_session = v:this_session$/;"	v
g:this_session	src/TrustModel/Session.vim	/^let g:this_session = v:this_session$/;"	v
get_attack_name	src/TrustModel/Attacks.r	/^get_attack_name <- function(attack_type) {$/;"	f
get_random_service	src/TrustModel/TrustManager.r	/^get_random_service <- function() {$/;"	f
good_mouth	src/TrustModel/Attacks.r	/^good_mouth <- function() {$/;"	f
graph_final_qrs	src/TrustModel/TrustManager.r	/^graph_final_qrs <- function(network) {$/;"	f
graph_final_trust	src/TrustModel/TrustManager.r	/^graph_final_trust <- function(network) {$/;"	f
graph_node_data	src/TrustModel/TrustManager.r	/^graph_node_data <- function(total_nodes, network, folder) {$/;"	f
graph_nodemon_data	src/TrustModel/TrustManager.r	/^graph_nodemon_data <- function(nodemon_data, node_id, is_malicious) {$/;"	f
graph_qr_gradient	src/TrustModel/TrustManager.r	/^graph_qr_gradient <- function(network) {$/;"	f
graph_reputations	src/TrustModel/TrustManager.r	/^graph_reputations <- function(network) {$/;"	f
graph_single_node	src/TrustModel/TrustManager.r	/^graph_single_node <- function(network, node_id) {$/;"	f
help	src/TrustModel/ConsoleInterface.r	/^help <- function() {$/;"	f
initialize	src/TrustModel/TrustModel.r	/^initialize <- function(network, R, time, lambda, theta, eta) {$/;"	f
main	src/CapabilityEffects/ConsoleInterface.r	/^main <- function() {$/;"	f
main	src/TrustModel/ConsoleInterface.r	/^main <- function() {$/;"	f
malicious_legend	src/TrustModel/TrustManager.r	/^malicious_legend <- function(x, y) {$/;"	f
network	src/TrustModel/WebServer.r	/^network <- list()$/;"	g
nodemon_data	src/TrustModel/WebServer.r	/^nodemon_data <- matrix()$/;"	g
on_off	src/TrustModel/Attacks.r	/^on_off <- function(is_bad_mouthing) {$/;"	f
optigrab	src/CapabilityEffects/ConsoleInterface.r	/^library(optigrab)$/;"	l
output$context_attack_impact	src/CapabilityEffects/WebServer.r	/^    output$context_attack_impact <- renderText({$/;"	v
output$final_qrs	src/TrustModel/WebServer.r	/^        output$final_qrs <- renderPlot({$/;"	v
output$final_trust	src/TrustModel/WebServer.r	/^        output$final_trust <- renderPlot({$/;"	v
output$node_data	src/TrustModel/WebServer.r	/^        output$node_data <- renderPlot({$/;"	v
output$node_data	src/TrustModel/WebServer.r	/^    output$node_data <- renderPlot({$/;"	v
output$nodemon	src/TrustModel/WebServer.r	/^        output$nodemon <- renderPlot({$/;"	v
output$qr_gradient	src/TrustModel/WebServer.r	/^        output$qr_gradient <- renderPlot({$/;"	v
output$reputation	src/CapabilityEffects/WebServer.r	/^    output$reputation <- renderPlot({$/;"	v
output$reputations	src/TrustModel/WebServer.r	/^        output$reputations <- renderPlot({$/;"	v
p	src/TrustModel/TrustManager.r	/^    p <- scatterplot3d($/;"	v
plot_cap_qr	src/CapabilityEffects/ReputationQR.r	/^plot_cap_qr <- function(final_qrs) {$/;"	f
plot_reputation	src/CapabilityEffects/ReputationQR.r	/^plot_reputation <- function(reputations) {$/;"	f
post_init	src/TrustModel/TrustModel.r	/^post_init <- function(network, lambda, theta, eta, R,$/;"	f
rand_attack	src/TrustModel/Attacks.r	/^rand_attack <- function(choice, i=1) {$/;"	f
report_dist	src/CapabilityEffects/ReputationQR.r	/^report_dist <- function(c_j, s_j, c_target, s_target, eta, note,$/;"	f
report_dist	src/TrustModel/TrustModel.r	/^report_dist <- function(node_reports, c_target, s_target, eta,$/;"	f
restrict_reports	src/TrustModel/TrustModel.r	/^restrict_reports <- function(node_reports, c_target, s_target, eta) {$/;"	f
run	src/TrustModel/TrustModel.r	/^run <- function(lambda, theta, eta, total_nodes, malicious_percent,$/;"	f
s:l	report/Session.vim	/^let s:l = 10 - ((9 * winheight(0) + 20) \/ 40)$/;"	v
s:l	report/Session.vim	/^let s:l = 9 - ((8 * winheight(0) + 20) \/ 40)$/;"	v
s:l	src/CapabilityEffects/Session.vim	/^let s:l = 16 - ((0 * winheight(0) + 20) \/ 40)$/;"	v
s:l	src/CapabilityEffects/Session.vim	/^let s:l = 170 - ((26 * winheight(0) + 20) \/ 40)$/;"	v
s:l	src/CapabilityEffects/Session.vim	/^let s:l = 45 - ((16 * winheight(0) + 20) \/ 40)$/;"	v
s:l	src/TrustModel/Session.vim	/^let s:l = 220 - ((2 * winheight(0) + 20) \/ 40)$/;"	v
s:so_save	report/Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	src/CapabilityEffects/Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:so_save	src/TrustModel/Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	report/Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	src/CapabilityEffects/Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:sx	src/TrustModel/Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	report/Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	src/CapabilityEffects/Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuf	src/TrustModel/Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
scatterplot3d	src/TrustModel/TrustManager.r	/^library(scatterplot3d)$/;"	l
server	src/CapabilityEffects/WebServer.r	/^server <- function(input, output) {$/;"	f
server	src/TrustModel/WebServer.r	/^server <- function(input, output) {$/;"	f
service_set	src/TrustModel/Attacks.r	/^service_set <- function() {$/;"	f
shiny	src/CapabilityEffects/WebServer.r	/^library(shiny)$/;"	l
shiny	src/TrustModel/WebServer.r	/^library(shiny)$/;"	l
take_note	src/TrustModel/TrustModel.r	/^take_note <- function(server_service, server_capability, service_target, capability_target) {$/;"	f
take_notes	src/CapabilityEffects/ReputationQR.r	/^take_notes <- function(c, c_target, s, s_target, client_qrs) {$/;"	f
time_decay	src/TrustModel/Attacks.r	/^time_decay <- function(time) {$/;"	f
transaction	src/TrustModel/TrustModel.r	/^transaction <- function(server_service, server_capability,$/;"	f
transaction_and_update	src/TrustModel/TrustModel.r	/^transaction_and_update <- function(network, R, time, lambda, theta, eta,$/;"	f
ui	src/CapabilityEffects/WebServer.r	/^ui <- fluidPage($/;"	g
ui	src/TrustModel/WebServer.r	/^ui <- fluidPage($/;"	g
update_qrs	src/TrustModel/TrustModel.r	/^update_qrs <- function(network, R, w, client, server, client_note, theta, time) {$/;"	f
weigh_reports	src/TrustModel/TrustModel.r	/^weigh_reports <- function(lambda, theta, node_reports, report_distances, time) {$/;"	f
wrong_note	src/TrustModel/TrustModel.r	/^wrong_note <- function(note) {$/;"	f
